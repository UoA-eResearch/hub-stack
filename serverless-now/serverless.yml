service: serverless-now

custom:
  ResearchHub: ${self:service}
  BusinessService: Faculty of Science
  Department: Centre for eResearch
  ProjectCode: N/A
  WikiLink: N/A
  Application: ${self:service}
  CostCentre: N/A
  customDomain:
    domainName: ${file(env/${self:provider.stage}.json):infra.awsApiGatewayCustomDomainName}
    basePath: ${self:service}
    stage: ${self:provider.stage}
    createRoute53Records: true


provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'sandbox'} # Deploy with sls deploy --stage STAGE (default dev)
  region: ap-southeast-2
  endpointType: regional
  role: arn:aws:iam::416527880812:role/lambda_basic_execution_with_read_only_access_to_SSM
  tags:
    ResearchHub: ${self:custom.ResearchHub}
    BusinessService:  ${self:custom.BusinessService}
    Department: ${self:custom.Department}
    ProjectCode: ${self:custom.ProjectCode}
    WikiLink: ${self:custom.WikiLink}
    Application: ${self:custom.Application}
    CostCentre: ${self:custom.CostCentre}
  stackTags:
    ResearchHub: ${self:custom.ResearchHub}
    BusinessService:  ${self:custom.BusinessService}
    Department: ${self:custom.Department}
    ProjectCode: ${self:custom.ProjectCode}
    WikiLink: ${self:custom.WikiLink}
    Application: ${self:custom.Application}
    CostCentre: ${self:custom.CostCentre}
  environment:
    # Environment variables available to all functions in this service
    SERVICENOW_BASE_URL: ${file(env/${self:provider.stage}.json):SERVICENOW_BASE_URL}
    LEVEL: INFO
    EXAMPLE_KEY: ${file(env/${self:provider.stage}.json):EXAMPLE_KEY}
    SN_API_KEY_R: ${file(env/${self:provider.stage}.json):SN_API_KEY_R}
    SN_DEV_API_KEY_RW: ${file(env/${self:provider.stage}.json):SN_DEV_API_KEY_RW}
    COGNITO_DOMAIN: ${file(env/${self:provider.stage}.json):COGNITO_DOMAIN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
      Resource:
        - "arn:aws:ssm:${self:provider.region}:416527880812:parameter/${self:provider.stage}/research-hub/*"
    - Effect: Allow
      Action:
        - kms:Decrypt
      Resource:
        - "arn:aws:kms:ap-southeast-2:416527880812:key/3cf7aeb4-ad8c-4505-a8e3-7d2a556e188d"

package:
  exclude:
    - .git/**
    - .vscode/*
    - events/*
    - node_modules/**
    - '!node_modules/@uoa/**'
    - '!node_modules/uuid/**'

functions:
  serverless-now:
    handler: handler.main
    events:
      - http:
          path: /
          method: get
          cors: true
          authorizer:
            name: serverless-now-auth
            type: cognito_user_pools
            arn: arn:aws:cognito-idp:ap-southeast-2:416527880812:userpool/ap-southeast-2_pgErjyL4O
            identitySource: method.request.header.Authorization
            scopes: ${file(env/${self:provider.stage}.json):OAUTH_SCOPES} 
      - http:
          path: /
          method: post
          cors: true
          authorizer:
            name: serverless-now-auth
            type: cognito_user_pools
            arn: arn:aws:cognito-idp:ap-southeast-2:416527880812:userpool/ap-southeast-2_pgErjyL4O
            identitySource: method.request.header.Authorization
            scopes: ${file(env/${self:provider.stage}.json):OAUTH_SCOPES}
              
plugins:
  - serverless-offline
  - serverless-mocha-plugin
  - serverless-domain-manager